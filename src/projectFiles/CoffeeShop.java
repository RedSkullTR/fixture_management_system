/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projectFiles;

import java.sql.SQLException;
import java.util.List;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Ahmet Nuri
 */
public class CoffeeShop extends javax.swing.JFrame {

    // Department id number in database
    public static int DEPARTMENT_ID = 3;
    
    /**
     * Creates new form Clothing
     */
    public CoffeeShop() {
        initComponents();
        listItems();
        
    }   

    private void listItems(){
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        while (model.getRowCount() > 0){
            model.removeRow(0);
        }
        try {
            DB db = new DB();
            List<ItemClass> items = db.getItems(DEPARTMENT_ID);
            for (ItemClass item : items){
                model.addRow(new Object[] {item.id,item.name,item.amount,item.price});
            }
        } catch (SQLException ex) {
            Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        lbl_infoMessage = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_upgrade = new javax.swing.JButton();
        btn_delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_list = new javax.swing.JTable();
        txt_price = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        spn_amount = new javax.swing.JSpinner();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_extra = new javax.swing.JMenu();
        mitem_back = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        mitem_add = new javax.swing.JMenuItem();
        mitem_update = new javax.swing.JMenuItem();
        mitem_delete = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 0));
        setForeground(new java.awt.Color(255, 153, 0));
        setSize(new java.awt.Dimension(600, 650));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("İsim:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Adet:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Fiyat(adet): ");

        lbl_infoMessage.setForeground(new java.awt.Color(255, 0, 51));

        btn_add.setText("Ekle");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 204));
        jLabel5.setText("Kahveci Mağazası Demirbaş");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 204, 204));
        jLabel6.setText("Yönetim Ekranı");

        btn_upgrade.setText("Ürün Güncelle");
        btn_upgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_upgradeActionPerformed(evt);
            }
        });

        btn_delete.setText("Sil");
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(255, 153, 0));
        jScrollPane1.setForeground(new java.awt.Color(153, 0, 153));

        tbl_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "İsim", "Adet", "Fiyat(adet)"
            }
        ));
        tbl_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_list);

        spn_amount.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        menu_extra.setText("Ekstralar");

        mitem_back.setText("Geri git");
        mitem_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_backActionPerformed(evt);
            }
        });
        menu_extra.add(mitem_back);
        menu_extra.add(jSeparator3);

        mitem_add.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mitem_add.setText("Ekle");
        mitem_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_addActionPerformed(evt);
            }
        });
        menu_extra.add(mitem_add);

        mitem_update.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mitem_update.setText("Ürün Güncelle");
        mitem_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_updateActionPerformed(evt);
            }
        });
        menu_extra.add(mitem_update);

        mitem_delete.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_DOWN_MASK));
        mitem_delete.setText("Sil");
        mitem_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitem_deleteActionPerformed(evt);
            }
        });
        menu_extra.add(mitem_delete);

        jMenuBar1.add(menu_extra);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel6)
                        .addGap(121, 191, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_name, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_price, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(spn_amount))
                                .addGap(72, 72, 72)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_upgrade)
                                    .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbl_infoMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1)))
                        .addGap(24, 92, Short.MAX_VALUE))))
            .addComponent(jSeparator2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_add))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btn_upgrade)
                    .addComponent(spn_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txt_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_delete))
                .addGap(17, 17, 17)
                .addComponent(lbl_infoMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        
        
        lbl_infoMessage.setText("");
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        if( txt_name.getText().trim().equals("") || txt_price.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Herhangi bir alan boş bırakılamaz.!!");
        }
        else {
            try{
                // Item mapping
                ItemClass item = new ItemClass();
                item.name = txt_name.getText();
                item.amount = Integer.parseInt(spn_amount.getValue().toString());
                item.price = Double.parseDouble(txt_price.getText());
                item.department = DEPARTMENT_ID;
                
                DB db = new DB();
                int count = db.add(item);
                db.close();
                lbl_infoMessage.setText("Ürün başarıyla eklendi...");
                if (count > 0){
                    listItems();
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }
            } catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Lütfen adet kısmını tam sayı olarak, fiyat kısmını ondalık sayı olarak giriniz.");
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
            }
        }
         
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_upgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_upgradeActionPerformed
        lbl_infoMessage.setText("");
        
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        int selectedRow = tbl_list.getSelectedRow();
        
        if (selectedRow == -1) {
            if (tbl_list.getRowCount() == 0){
                JOptionPane.showMessageDialog(rootPane, "Ürün tablosu şu anda boş.!!");
            }
            else {
                lbl_infoMessage.setText("Lütfen Güncellenecek bir ürün seçin");
            }
        }
        else {
            try {
                DB db = new DB();
                ItemClass item = db.getItem(Integer.parseInt(model.getValueAt(selectedRow, 0).toString()));
                item.name = txt_name.getText();
                item.amount = Integer.parseInt(spn_amount.getValue().toString());
                item.price = Double.parseDouble(txt_price.getText());
                int count = db.update(item);
                if(count > 0) {
                    listItems();
                    lbl_infoMessage.setText("Ürün başarıyla güncellendi...");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }      
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Lütfen adet kısmını tam sayı olarak, fiyat kısmını ondalık sayı olarak giriniz.");
            }
        }
    }//GEN-LAST:event_btn_upgradeActionPerformed

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        int secili_row = tbl_list.getSelectedRow();
        
        if (secili_row == -1) {
            if (tbl_list.getRowCount() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Ürün tablosu şu anda boş.!!");
            }
            else {
                lbl_infoMessage.setText("Lütfen bir ürün seçiniz...");
            }
        }
        else {        
            try {
                DB db = new DB();
                int count = db.delete(Integer.parseInt(model.getValueAt(secili_row, 0).toString()));
                db.close();
                if (count > 0){
                    listItems();
                    lbl_infoMessage.setText("Ürün başarıyla silindi...");
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void tbl_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_listMouseClicked
        // TODO add your handling code here:
        int index = tbl_list.getSelectedRow();
        TableModel model = tbl_list.getModel();
        txt_name.setText(model.getValueAt(index, 1).toString());
        spn_amount.setValue(model.getValueAt(index, 2));
        txt_price.setText(model.getValueAt(index, 3).toString());
        
    }//GEN-LAST:event_tbl_listMouseClicked

    private void mitem_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_backActionPerformed
        Management mng = new Management();
        mng.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_mitem_backActionPerformed

    private void mitem_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_addActionPerformed
        lbl_infoMessage.setText("");
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        if( txt_name.getText().trim().equals("") || txt_price.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Herhangi bir alan boş bırakılamaz.!!");
        }
        else {
            try{
                // Item mapping
                ItemClass item = new ItemClass();
                item.name = txt_name.getText();
                item.amount = Integer.parseInt(spn_amount.getValue().toString());
                item.price = Double.parseDouble(txt_price.getText());
                item.department = DEPARTMENT_ID;
                
                DB db = new DB();
                int count = db.add(item);
                db.close();
                lbl_infoMessage.setText("Ürün başarıyla eklendi...");
                if (count > 0){
                    listItems();
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }
            } catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Lütfen adet kısmını tam sayı olarak, fiyat kısmını ondalık sayı olarak giriniz.");
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
            }
        }
    }//GEN-LAST:event_mitem_addActionPerformed

    private void mitem_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_updateActionPerformed
        lbl_infoMessage.setText("");
        
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        int selectedRow = tbl_list.getSelectedRow();
        
        if (selectedRow == -1) {
            if (tbl_list.getRowCount() == 0){
                JOptionPane.showMessageDialog(rootPane, "Ürün tablosu şu anda boş.!!");
            }
            else {
                lbl_infoMessage.setText("Lütfen Güncellenecek bir ürün seçin");
            }
        }
        else {
            try {
                DB db = new DB();
                ItemClass item = db.getItem(Integer.parseInt(model.getValueAt(selectedRow, 0).toString()));
                item.name = txt_name.getText();
                item.amount = Integer.parseInt(spn_amount.getValue().toString());
                item.price = Double.parseDouble(txt_price.getText());
                int count = db.update(item);
                if(count > 0) {
                    listItems();
                    lbl_infoMessage.setText("Ürün başarıyla güncellendi...");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }      
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch (NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Lütfen adet kısmını tam sayı olarak, fiyat kısmını ondalık sayı olarak giriniz.");
            }
        }
    }//GEN-LAST:event_mitem_updateActionPerformed

    private void mitem_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitem_deleteActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_list.getModel();
        
        int secili_row = tbl_list.getSelectedRow();
        
        if (secili_row == -1) {
            if (tbl_list.getRowCount() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Ürün tablosu şu anda boş.!!");
            }
            else {
                lbl_infoMessage.setText("Lütfen bir ürün seçiniz...");
            }
        }
        else {        
            try {
                DB db = new DB();
                int count = db.delete(Integer.parseInt(model.getValueAt(secili_row, 0).toString()));
                db.close();
                if (count > 0){
                    listItems();
                    lbl_infoMessage.setText("Ürün başarıyla silindi...");
                }
                else {
                    JOptionPane.showMessageDialog(rootPane, "Bir hata meydana geldi.!!");
                }
            } catch (SQLException ex) {
                Logger.getLogger(CoffeeShop.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }//GEN-LAST:event_mitem_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoffeeShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoffeeShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoffeeShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoffeeShop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CoffeeShop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_upgrade;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JLabel lbl_infoMessage;
    private javax.swing.JMenu menu_extra;
    private javax.swing.JMenuItem mitem_add;
    private javax.swing.JMenuItem mitem_back;
    private javax.swing.JMenuItem mitem_delete;
    private javax.swing.JMenuItem mitem_update;
    private javax.swing.JSpinner spn_amount;
    private javax.swing.JTable tbl_list;
    private javax.swing.JTextField txt_name;
    private javax.swing.JTextField txt_price;
    // End of variables declaration//GEN-END:variables
}
